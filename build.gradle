buildscript {
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
    }
}

plugins {
    id 'java'
    // Apply the Kotlin JVM plugin to add support for Kotlin.
    id 'org.jetbrains.kotlin.jvm' version '1.4.20'
    id 'application'
    id 'jacoco'
    id 'idea'
    //Flyway, migration tool
    id("org.flywaydb.flyway") version "7.3.0"
}

apply plugin: "org.flywaydb.flyway"
apply plugin: "org.junit.platform.gradle.plugin" //For Spek

//Spek
junitPlatform {
    filters {
        engines {
            include 'spek'
        }
    }
}

group 'org.example'
version '1.0'

repositories {
    //Parser
    maven { url = uri("https://kotlin.bintray.com/kotlinx") }
    //h2db
    maven { url = uri("https://mvnrepository.com/artifact/com.h2database/h2") }
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "https://dl.bintray.com/mockito/maven" }
    maven { url "http://dl.bintray.com/jetbrains/spek" }
    mavenCentral()
}

mainClassName = "Main"


jar {
    manifest {
        attributes 'Main-Class': 'Main'
    }
    archiveClassifier = 'fat-jar'
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}


dependencies {
    // Align versions of all Kotlin components
    implementation(platform("org.jetbrains.kotlin:kotlin-bom"))
    // Use the Kotlin JDK 8 standard library.
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    // spek requires kotlin-reflect, can be omitted if already in the classpath
    //testRuntimeOnly "org.jetbrains.kotlin:kotlin-reflect:1.4.20"

    //Logger
    implementation("org.apache.logging.log4j:log4j-api:2.7")
    implementation("org.apache.logging.log4j:log4j-core:2.7")

    //Parser
    implementation("org.jetbrains.kotlinx:kotlinx-cli:0.3")

    //h2db
    implementation("com.h2database:h2:1.4.200")

    //FlyWay
    implementation("org.flywaydb:flyway-core:7.3.0")

    //Spek
    testCompile 'org.jetbrains.spek:spek-api:1.1.5'
    testRuntime 'org.jetbrains.spek:spek-junit-platform-engine:1.1.5'

    //Mockito
    testImplementation "org.mockito:mockito-core:1.+"

    //JUnit
    testImplementation(platform('org.junit:junit-bom:5.7.0'))
    testImplementation('org.junit.jupiter:junit-jupiter')
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

jacoco {
    toolVersion = "0.8.5"
}

jacocoTestReport {
    group = "reporting"
    description = "Generate Jacoco coverage reports after running tests."
    reports {
        xml.enabled true
        html.enabled true
        csv.enabled false
    }
}

test.finalizedBy jacocoTestReport